@import url('https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500&display=swap');
@import url('https//cdn.jsdelivr.net/npm/hack-font@3.3.0/build/web/hack.css');

:root { 
    /* --clr-white: #fff;  */
    /* --clr-hero-300: #eeee; */

    --clr-hero-100: #EBDFF6; 
    --clr-hero-200: #CCAFE9;
    --clr-hero-300: #B890E0; /* MAIN COLOR (Maybe the main color being hero-400 would be better? idk, I think it works aswell idk. */ 
    --clr-hero-400: #9F5FDE; 
    --clr-hero-500: #A351F6; 
    --clr-hero-600: #660AC2; 
    --clr-hero-700: #29044E; 
    --clr-hero-800: #140226; 
    --clr-hero-900: #0A0113;

    --clr-white: #ffffff;
    --clr-black: #0A070A; /* It is also a derivitve of our hero color if you lighten it a bit then darken it. sounds weird but true! */


    /* --clr-hero-300: #BDB2FF;
    --clr-hero-700: #E2AFFF;  */
}

* { scroll-behavior: smooth; }
*::selection { background-color: var(--clr-hero-300); color: var(--clr-hero-900); }

/* * { outline: 1px solid red; } */
nav { background-color: var(--clr-hero-800); }
html { background-color: var(--clr-hero-900);}
header { background-color: blueviolet;}

/*****************************
        ELEMENT STYLES.       
*****************************/

.pre-tittle { 
    margin-bottom: 0px; 
    font-weight: 500; 
    color: var(--clr-hero-300); 
}

.warning { 
    background-color: var(--clr-hero-800);
    width: 90%;
    padding-right: 2rem; 
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;  
    border-radius: 4px; 
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
}

blockquote { 
    margin-left: 0.5rem; 
    padding-left: 1rem; 
    padding-top: 0.5rem; 
    padding-bottom: 0.5rem;
    border-left: 3px solid var(--clr-hero-300)
}

p, blockquote { 
    line-height: 1.5; 
    text-align: justify; 
    color: var(--clr-white); 
}

h2 { font-size: 2rem; }
h3, h4, h5, h6 { font-size: 1.5rem; }

h1, h2, h3, h4, h5, h6 { 
    margin-top: 0px; 
    margin-bottom: 0.5rem; 
}
p { margin-top: 0px; }

a { text-decoration: none; color: var(--clr-hero-300) !important; }
a:hover { text-decoration: none; color: var(--clr-hero-100) !important; transition-duration: 150ms;}

td a { text-decoration: none; color: var(--clr-hero-300); }

table { 
    width: 100%; 
    color: var(--clr-white); 
}

s { 
    text-decoration: line-through 2px;
    /* color: grey;  MAYBE THIS */
    /* border: 2px solid red;  */
}

u { 
    text-decoration: none;
    border-bottom: 1px solid; 
}

table th { background-color: var(--clr-hero-700); }
td { border-bottom: 1px solid var(--clr-hero-700); }
td:hover { border-bottom: 1px solid var(--clr-hero-300); }

/* ADD TAB STYLES */
/* COPIED FROM: https://gist.github.com/brickbones/0b447985b10f143a160bcf2e1d69726a 
   and Mofied By: tryoxiss (me) */
.tabs {
    display: flex;
    flex-wrap: wrap;
    /* max-width: 600px; */
    /* margin: 50px auto; */
    padding-top: 1rem;
    padding-bottom: 1rem; 
}
.tabs input[type="radio"] {
    display: none;
}
.tabs label {
    padding: 1rem;
    background: var(--clr-hero-900);
    font-weight: bold;
    color: var(--clr-white)
}

.tabs label:hover { 
    color: var(--clr-hero-300); 
    cursor: alias;
    animation-duration: 150ms;
}

/* .tabs .tab-spacer { 
    padding: 0.5rem; 
} */

.tabs .tab {
    width: 100%;
    padding: 20px;
    background: var(--clr-hero-800);
    order: 1;
    display: none;
}
/* .tabs .tab h3 {
    font-size: 3em;
} */

.tabs input[type='radio']:checked + label + .tab {
    display: block;
    border-radius: 4px;
}

.tabs input[type="radio"]:checked + label {
    background: var(--clr-hero-800);

    border-top-left-radius: 4px; 
    border-top-right-radius: 4px; 
}

.grid .pre-title { 
    margin: 0px; 
    color: var(--clr-hero-300); 
}

.grid blockquote { 
    grid-column: span 2;
}

blockquote span { 
    color: var(--clr-hero-300); 
}

/* input label div { 
    border-radius: 4px; 
} */

/* ADD INPUT STYLES */

/* TABLE STYLES  (makes my brain hurt so no) */

/* table { width: 100%; }
th, td { 
    border-bottom: 1px solid var(--clr-white)
} */

/* STYLE TO-DO LIST */

/* Headings 
Hilights (:selection) 
Focus 
p
a 
File extensions 
Tone indicators? 
Trigger/content warnings 
Blocquites 
Lists and Nested lists (ul, li) 
ABBR 
definition (froget what the element is called) 
Bold 
Italics 
Underline 
strong 
Tables 
spoilers

—— 
Try and use: 
Section where semanticall good */

/*****************************
   BASIC AND LAYOUT STYLES.   
*****************************/

/* BASIC LAYOUT */

html { 
    font-family: Rubik; 
    padding: 0px; 
    margin: 0px; 
    min-height: 100vh; 
}

body { 
    display: grid; 
    grid-template-columns: 22% calc(100% - 22%);

    padding: 0px; 
    margin: 0px !important; 
    min-height: 100vh; 
}

h1 { 
    margin-left: 1rem; 
    margin-top: 20vh; 
    margin-bottom: 20vh; 

    line-height: 0.8; 
    text-transform: uppercase;
    font-size: 2.5rem; 
}

header { 
    min-height: 40vh; 
    /* max-height: 60vh;  */

    background-repeat: no-repeat;
    background-size: 100%;
}

img { 
    max-width: 100%; 
    /* grid-column: span 2; */
}

code { 
    color: white; 
    background-color: var(--clr-black);
    padding: 0.2rem;
    border-radius: 4px; 
    font-family: Hack;
    font-size: 1rem; 
}

.command { 
    padding: 0.3rem; 
    /* margin-bottom: 1rem;  */
    /* margin-bottom: 10000px;  */
    /* margin-top: -1rem;  */
    line-height: 2; 
}

.bash-user::before { content: '$ ' }
.bash-sudo::before { content: '# '}

/* .language-bash::before,
.language-shell::before,
.language-sh::before { 
    content: '$ ';
} */

/* GRID PAGES */

.grid { 
    margin-top: 1rem; 
    display: grid; 
    grid-template-columns: 1fr 1fr; 
    grid-gap: 1rem; 
    /* max-width: calc(50% + 280px) !important;  */
}

.grid div { 
    color: white; 
    background-color: var(--clr-hero-800);

    /* min-height: 20rem;  */
    padding: 1rem; 
    border-radius: 4px;
}

h1, h2, h3, h4, h5, h6, p, ul, li, a { 
    grid-column: span 2;
    color: white; 
}

/* .grid-box { 
    max-width: 100px; 
} */

nav li { 
    list-style: none; 
    font-size: 1.7rem;
    font-weight: 700;  
    text-align: center; 
}

/* nav ul { 
    width: 100%; 
} */

nav div { 
    margin: 0px; 
    padding: 0px; 
}

@media (min-width: 1080px) { 
    h1 { 
        max-width: 60%; 
    }

    h1 span { 
        color: var(--clr-hero-300); 
    }
    
    .page { 
        max-width: calc(60% + 100px); 
        padding: 1rem; 
        padding-top: 0px; 
    }
    
    nav { 
        grid-row: span 3; 
    }

    nav div { 
        position: fixed; 
        width: 22%; 
    }

    nav ul { 
        margin-left: -2.5rem; 
    }

    nav li { 
        margin-bottom: 1rem; 
    }

    nav img { 
        width: 100%; 
    }

    nav svg { 
        width: 100; 
        height: 50; 
        background-color: green; 
        margin-left: auto; 
        margin-right: auto; 
    }

    header { 
        grid-column: 2 / 3; 
    }
}

@media (max-width: 1079px) { 
    nav { 
        grid-column: span 2; 
    }

    header { 
        grid-column: span 2;
    }

    .page { 
        grid-column: span 2;
        padding: 1rem; 
    }

    body { 
        margin: 0.5rem; 
    }

    nav ul { 
        display: flex; 
        margin-left: auto; 
    }

    nav li { 
        margin-right: 1.5rem; 
    }

    header { 
        background-size: 200%;
    }


    .grid div { 
        grid-column: span 2;
    }
}

/****************** FOOTER STYLING ************/ 

/* div[id="fake-footer"]  { 
    background-color: var(--clr-black); 
    /* margin-top: auto;  
    grid-column: 1;
    grid-column: 1;
    border-top: 1px solid var(--clr-hero-300); 
    /* border-left: 1px solid var(--clr-hero-300);  
} */

div[id="footer"]  { 
    background-color: var(--clr-black); 
    /* max-height: 100%;  */
    /* display: flex;  */
    /* max-width: 100%;  */
    /* width: ; */

    /* min-height: 100%;  */
    margin-top: auto; 
    /* grid-column: span 2; */

    grid-column: span 2;

    border-top: 1px solid var(--clr-hero-300); 
    /* border-left: 1px solid var(--clr-hero-300);  */
}

div[id="footer"] ul { 
    padding-top: 1rem; 
    list-style: none;
    grid-column-start: 2; 
    /* grid-column: 1 / 2; */
}

div[id="footer"] ul:nth-of-type(1) { padding-top: 2rem; }

/* div[id="footer"] ul:nth-of-type(1) { 
    margin-top: 4rem;
} */

div[id="footer"] li { 
    margin-right: 1rem; 
    display: inline-block; 
}

div[id="footer"] a::after { 
    color: var(--clr-hero-900); 
}

/* div[id="footer"] li:nth-of-type(1):after { margin-left: .5rem; content: ''; } */
/* div[id="footer"] li:nth-last-of-type():after { content: ''; } */

/* div[id="footer"] a { 
    color: var(--clr-hero-300); 
    font-weight: 400;
} */

div[id="footer"] a::after { 
    color: var(--clr-white); 
    font-weight: 400;
    /* margin-left: 1rem;  */
}

div[id="footer"] a:hover { color: var(--clr-white); }

div[id="footer"] .head { /* div[id="footer"] a:nth-of-type(1) didnt work, it made them alkl have that styling... */
    color: white !important; 
    font-weight: 700;
    transition-duration: 150ms;
}

div[id="footer"] .head:hover { color: var(--clr-hero-300) !important; }

div[id="footer"] .head::after {
    color: var(--clr-hero-300); 
    font-weight: 400;
    content: ':'; 
}

div[id="footer"] p { padding: 2rem; color: var(--clr-white)}

div[id="footer"] a { 
    color: var(--clr-hero-300); 
    font-weight: 400;
}

/* THE FOOTER **CAN AND __WILL__** FLOAT UP SHORT PAGES!!! */

a[href*="."]::after { 
    color: var(--clr-white); 
    background-color: var(--clr-hero-700); 
    padding: 2px 4px; 
    border-radius: var(--border-radius); 
    margin-left: 0.3rem;
    text-transform: lowercase;
    transition-duration: 150ms;
    border-radius: 4px;

    /* psudo-elements wont show up unless tyhey have a content property, so since this dosent have one
    we can apply styling to all file type icons as a group without it showing up on HTML links (other webpages) */
}

a[href*="."]:hover:after { 
    color: var(--clr-white); 
    background-color: var(--clr-hero-600); 
    border-radius: var(--border-radius); 
    margin-left: 0.3rem;
    text-transform: lowercase;
    transition-duration: 150ms;
    border-radius: 4px; 
}

/* a[href*="."]::after { 
    text-transform: lowercase;
} */

/* I WILL KEEP T%HE CURRENT FOR NOW, but im not a big fan. just ".thing" works if its the files name but not otherwise (so not in most cases) and in brackets is too much work */

a[href$=".godot"]::after { content: '.godot'; }
a[href$=".pdf"]::after { content: '.pdf'; }
a[href$=".doc"]::after { content: '.DOC' }
a[href$=".docx"]::after { content: '.DOCX' }
a[href$=".png"]::after { content: '.PNG' }
a[href$=".jpg"]::after { content: '.JPEG' } a[href$=".jpeg"]::after { content: '.JPEG' }
a[href$=".ase"]::after { content: '.ASE' } a[href$=".aseprite"]::after { content: '.ASE' }
a[href$=".tscn"]::after { content: '.TSCN' }
a[href$=".gd"]::after { content: '.GD' }
a[href$=".c"]::after { content: '.C' }
a[href$=".cs"]::after { content: '.CS' }
a[href$=".cpp"]::after { content: '.CPP' }
a[href$=".zip"]::after { content: '.ZIP' }
a[href$=".tar.gz"]::after { content: '.TARGZ' }
a[href$=".tar.xz"]::after { content: '.TARXZ' }
a[href$=".yml"]::after { content: '.YML' } a[href$=".yaml"]::after { content: '.YML' }
a[href$=".dat"]::after { content: '.DAT' }
a[href$=".doc"]::after { content: '.DOC' }
a[href$=".md"]::after { content: '.MD'; }
/* a[href$=".html"]::after { content: 'HTML' } /* removed because it caused links to other webpages to have the file extention ::after when I include .html in thje href*/
a[href$=".css"]::after { content: '.CSS' }
a[href$=".js"]::after { content: '.JS' }
a[href$=".svg"]::after { content: '.SVG' }
a[href$=".gif"]::after { content: '.GIF' }
a[href$=".avi"]::after { content: '.AVI' }
a[href$=".bmp"]::after { content: '.BMP' }
a[href$=".csv"]::after { content: '.CSV' }
a[href$=".xml"]::after { content: '.XML' }
a[href$=".rtf"]::after { content: '.RTF' }
a[href$=".jar"]::after { content: '.JAR' }
a[href$=".mp3"]::after { content: '.MP3' }
a[href$=".mp4"]::after { content: '.MP4' }
a[href$=".rar"]::after { content: '.RAR' }
a[href$=".psd"]::after { content: '.PSD' }
a[href$=".wav"]::after { content: '.WAV' }
a[href$=".tex"]::after { content: '.TEX' }
a[href$=".txt"]::after { content: '.TXT' }
a[href$=".tif"]::after { content: '.TIFF' } a[href$=".tiff"]::after { content: '.TIFF' }
a[href$=".mov"]::after { content: '.MOV' }
a[href$=".flv"]::after { content: '.FLASH' }
a[href$=".avchd"]::after { content: '.AVC-HD' }
a[href$=".ppt"]::after { content: '.PPT' }
a[href$=".pptx"]::after { content: '.PPTX' }
a[href$=".odp"]::after { content: '.ODP' }
a[href$=".odt"]::after { content: '.ODT' }
a[href$=".ods"]::after { content: '.ODS' }
a[href$=".m4a"]::after { content: '.M4A' }
a[href$=".dll"]::after { content: '.DLL' }
a[href$=".eps"]::after { content: '.EPS' }
a[href$=".exe"]::after { content: '.EXE' }
a[href$=".sh"]::after { content: '.SHELL' }
a[href$=".fm3"]::after { content: 'F.M3' }
a[href$=".au"]::after { content: '.AU' }
a[href$=".bat"]::after { content: '.BATCH' }
a[href$=".java"]::after { content: '.JAVA' }
a[href$=".mid"]::after { content: '.MIDI' } a[href$=".midi"]::after { content: '.MIDI' }
a[href$=".psp"]::after { content: '.PSP' }
a[href$=".app"]::after { content: '.APP' }
a[href$=".qoi"]::after { content: '.QOI' }
a[href$=".3ds"]::after { content: '.3ds' }
a[href$=".a"]::after { content: '.A' }
a[href$=".aac"]::after { content: '.AAC' }
a[href$=".bak"]::after { content: '.BAK' }
a[href$=".cfg"]::after { content: '.cfg' } 
a[href$=".config"]::after { content: '.CONFIG' } 
a[href$=".b"]::after { content: '.B' }
a[href$=".py"]::after { content: '.PY' }
a[href$=".blend"]::after { content: '.BLEND' }
a[href$=".cdf"]::after { content: '.CDF' }
a[href$=".json"]::after { content: '.JSON' }
a[href$=".cmd"]::after { content: '.CMD' }
a[href$=".d"]::after { content: '.D' }
a[href$=".dat"]::after { content: '.DAT' }
a[href$=".iso"]::after { content: '.ISO' }
a[href$=".shefie"]::after { content: '.SHEFIE' }
a[href$=".deb"]::after { content: '.DEB' }
a[href$=".rpm"]::after { content: '.RPM' }
a[href$=".flatpak"]::after { content: '.FLATPAK' }
a[href$=".dir"]::after { content: '.DIR' }
a[href$=".torrent"]::after { content: '.TORRENT' }
a[href$=".edf"]::after { content: '.EDF' }
a[href$=".gdf"]::after { content: '.GDF' }
a[href$=".gmk"]::after { content: '.GMK' }
a[href$=".gml"]::after { content: '.GML' }
a[href$=".lua"]::after { content: '.LUA' }
a[href$=".mod"]::after { content: '.MOD' }
a[href$=".shemod"]::after { content: '.SHEMOD' } /* maybe also .fie or .fiemod? idk... */
a[href$=".mpg"]::after { content: '.MPG' }
a[href$=".msi"]::after { content: '.MSI' }
a[href$=".metadata"]::after { content: '.METADATA' } a[href$=".meta"]::after { content: '.META' } 
a[href$=".bashrc"]::after { content: '.BASHRC' }
a[href$=".ps1"]::after { content: '.ps1' }
a[href$=".var"]::after { content: '.VAR' }
a[href$=".pre"]::after { content: '.PRE' }
a[href$=".savegame"]::after { content: '.SAVEgame' } 
a[href$=".save"]::after { content: '.SAVE' } 
a[href$=".sbv"]::after { content: '.SBV' } /* Youtubes caption format, apaprerntly an open format, might use for captions */
a[href$=".cc"]::after { content: '.CC' }
a[href$=".caption"]::after { content: '.CAPTION' }
a[href$=".sub"]::after { content: '.SUB' }
a[href$=".sql"]::after { content: '.SQL' }
a[href$=".wld"]::after { content: '.WLD' }
a[href$=".ktd"]::after { content: '.KTD' } /* KittenTD file, for exmaples only. */